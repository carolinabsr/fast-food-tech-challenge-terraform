name: Deploy Database

on:
  push:
    branches:
      - main
    paths:
      - 'database/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.0

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3.1.2

    - name: Initialize Terraform Networking
      run: terraform init
      working-directory: networking

    - name: Validate Terraform Networking
      run: terraform validate
      working-directory: networking

    - name: Plan Terraform Networking
      run: terraform plan
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: networking

    - name: Apply Terraform Networking
      run: terraform apply -auto-approve
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: networking

    - name: Initialize Terraform Database
      run: terraform init
      working-directory: database

    - name: Validate Terraform Database
      run: terraform validate
      working-directory: database

    - name: Plan Terraform Database  
      run: terraform plan -var-file=../terraform.tfvars
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: database

    - name: Apply Terraform Database 
      run: terraform apply -auto-approve -var-file=../terraform.tfvars
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: database